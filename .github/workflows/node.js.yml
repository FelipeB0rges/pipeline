name: DemoNewCD

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to dev
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: 'ftp.devfelipeborges.com.br'
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: './build/'
          remote-dir: '/dev'

  deploy-hmg:
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to homolog
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: 'ftp.devfelipeborges.com.br'
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: './build/'
          remote-dir: '/homolog'

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-hmg
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to prod
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: 'ftp.devfelipeborges.com.br'
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: './build/'
          remote-dir: '/prod'
